name: Select a Container Image

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target Image'
        type: string
        required: true
        default: 'tumbleweed/gui_tools'

      publish:
        description: 'Push to DockerHub'
        type: boolean
        required: false
        default: false

jobs:

  build-image:
    name: Build Container Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Create extras directory
        run: |
          sudo apt-get update
          sudo apt-get install make
          which make
          pwd
          ls
          make -C containers/${{ inputs.target }} extras
          make -C containers/${{ inputs.target }} echo_tag version=gha
          which docker
          docker --version

      - name: Interrogate Environment
        run: |
          cat /etc/os-release
          uname -a
          env | sort
          df -h
          lscpu

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.BENKIRK_DOCKERHUB_USERNAME }}
          password: ${{ secrets.BENKIRK_DOCKERHUB_TOKEN }}

      - name: Query Docker Environment
        run: |
          which docker
          docker --version
          docker buildx ls
          docker buildx inspect
          docker buildx du

      - name: Build
        uses: docker/build-push-action@v6
        with:
          push: ${{ inputs.publish }}
          #tags: ${{ secrets.BENKIRK_DOCKERHUB_USERNAME }}/gh-ci-${{ inputs.os }}:latest
          #cache-from: type=registry,ref=${{ secrets.BENKIRK_DOCKERHUB_USERNAME }}/gh-ci-cache-${{ inputs.os }}:buildcache-${{env.INPUTS_SHA }}
          #cache-to: type=registry,ref=${{ secrets.BENKIRK_DOCKERHUB_USERNAME }}/gh-ci-cache-${{ inputs.os }}:buildcache-${{env.INPUTS_SHA }},mode=max
          context: containers/${{ inputs.target }}
          file: containers/${{ inputs.target }}/Dockerfile
